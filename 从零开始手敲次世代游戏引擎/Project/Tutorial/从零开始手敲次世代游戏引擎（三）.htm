<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>从零开始手敲次世代游戏引擎（三）</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<P><EM><A href="https://zhuanlan.zhihu.com/p/28611487" target=_blank >原文链接</A> </EM></P>
<P><EM>(未修改原文） </EM></P>
<P><EM>正文开始：</EM></P>
<P 
style='FONT-SIZE: medium; FONT-FAMILY: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(26,26,26); FONT-STYLE: normal; MARGIN: 0px 0px 1.4em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'>前一篇文章我们建立了windows上的clang工具链。<BR>为了今后时刻可以检验我们的代码也可以在LINUX等环境下正常编译运行，我们现在开始建立LINUX下的编译环境。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>LINUX可以选择任意一个发行版本。不同的发行版本在api接口方面是接近的，主要的不同是软件包的版本，以及包管理方式等。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>ubuntu系列更新比较频繁，包体的版本较新。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>centos系列是redhat系列的免费版，比较稳扎稳打，包体相对旧一些。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>debian则更新非常的慢了。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>bsd系列(这个严格来说不是LINUX，而是类UNIX系统) 
中规中矩，严守unix规范，相对难用一些。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>最重要的是，是否有最大的两家GPU厂商的驱动支持。目前N卡的支持情况相对较好，A卡之前很差，现在有了OpenGPU这个项目，以及amdpro系列驱动，情况有所好转。<BR>我所用的是带GPU的阿里云主机，有A卡版本和N卡版本。N卡版本比A卡版本贵不少，而且考虑到当代主机是以A卡为主，所以选用了A卡主机。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>可能因为虚拟化的关系，阿里云上的A卡主机需要阿里云和AMD合作定制的特殊驱动。AMD官网上下载的驱动装上之后设备初始化会出错。而阿里云不提供这个特殊版驱动的单体，只提供预装了驱动的系统镜像。目前可选的只有CentOS和ubuntu。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>需要注意的是由于amdpro驱动是内核模块插入方式，因此对内核的升级就比较敏感。亲测无论是选用CentOS还是ubuntu，如果升级最新内核就会导致驱动失效，所以在新驱动出来之前需要锁定内核版本。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>没有云服务器的，也可以在windows机器上安装一个vmware虚拟机，在那个里面装一个linux。免费的vmware 
workstation 
player就可以。注意目前对显卡支持较好的vmware是12以上的版本。早期版本只能支持到DX9级别，也就是固定管道渲染。其它虚拟机对显卡的支持更差，比如virtualbox。<SPAN 
class=Apple-converted-space>&nbsp;</SPAN><BR>Linux下构建toolchain的过程与windows类似(参考上一篇文章)，可以使用yum或者apt安装发行版提供的编译好的包，也可以采用下载源码编译的方式。<BR>作为演示，我这里采用另外一种方式，导入docker。docker是一种将特定应用环境容器化的方式，可以是实现应用的快速部署，以及和宿主环境的隔离。<BR>docker入门教程参考:<BR><A 
class=" external" 
style="CURSOR: pointer; TEXT-DECORATION: none; BORDER-BOTTOM: grey 1px solid; COLOR: " 
href="https://link.zhihu.com/?target=http%3A//www.docker.org.cn/book/docker.html" 
rel="nofollow noreferrer" target=_blank  data-za-detail-view-id="1043"><SPAN 
class=invisible 
style="COLOR: transparent; FONT: 0px/0 a; BACKGROUND-COLOR: transparent; font-stretch: normal; text-shadow: none">http://www.</SPAN><SPAN 
class=visible>docker.org.cn/book/dock</SPAN><SPAN class=invisible 
style="COLOR: transparent; FONT: 0px/0 a; BACKGROUND-COLOR: transparent; font-stretch: normal; text-shadow: none">er.html</SPAN><SPAN 
class=ellipsis></SPAN></A><BR>安装好docker之后，使用:<BR>docker pull 
tim03/clang<BR>就可以将我事先准备好的clang环境部署到本地。创建这个docker 
image的dockerfile则在下面这个地址，如果你想要知道它是怎么创建出来的话:<BR><A class=" external" 
style="CURSOR: pointer; TEXT-DECORATION: none; BORDER-BOTTOM: grey 1px solid; COLOR: " 
href="https://link.zhihu.com/?target=https%3A//github.com/netwarm007/dockerfile-clang/blob/master/Dockerfile" 
rel="nofollow noreferrer" target=_blank  data-za-detail-view-id="1043"><SPAN 
class=invisible 
style="COLOR: transparent; FONT: 0px/0 a; BACKGROUND-COLOR: transparent; font-stretch: normal; text-shadow: none">https://</SPAN><SPAN 
class=visible>github.com/netwarm007/d</SPAN><SPAN class=invisible 
style="COLOR: transparent; FONT: 0px/0 a; BACKGROUND-COLOR: transparent; font-stretch: normal; text-shadow: none">ockerfile-clang/blob/master/Dockerfile</SPAN><SPAN 
class=ellipsis></SPAN></A><BR>当docker pull全部完成之后，我们进入到我们Hello 
Engine所在的目录(就是main.c所在目录)，执行:<BR>docker run -it --rm -v $(pwd):/usr/src 
tim03/clang<BR>我们就会进入带有clang的docker容器，并且我们的源代码目录被映射到了/usr/src目录之下。执行下面的命令编译并观察执行结果:</P>
<P 
style='FONT-SIZE: medium; FONT-FAMILY: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(26,26,26); FONT-STYLE: normal; MARGIN: 1.4em 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'>bash-4.4# 
ls<BR>LICENSE README.md a.out main.c<BR>bash-4.4# clang main.c<BR>main.c:3:1: 
warning: return type of 'main' is not 'int' [-Wmain-return-type]<BR>void main() 
{<BR>^ main.c:3:1: note: change return type to 'int'<BR>void main() {<BR>^~~~ 
int<BR>1 warning generated.<BR><BR>bash-4.4# ls -l<BR>total 24<BR>-rw-rw-r-- 1 
1000 1000 1067 Aug 18 20:12 LICENSE<BR>-rw-rw-r-- 1 1000 1000 100 Aug 18 20:12 
README.md<BR>-rwxr-xr-x 1 root root 10368 Aug 18 22:02 a.out<BR>-rw-rw-r-- 1 
1000 1000 66 Aug 18 20:15 main.c<BR>bash-4.4# ./a.out<BR>Hello, 
Engine!<BR>bash-4.4# exit<BR></P>
<P 
style='FONT-SIZE: medium; FONT-FAMILY: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(26,26,26); FONT-STYLE: normal; MARGIN: 1.4em 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'>(-- 
EOF --)</P>
<P class=ztext-empty-paragraph 
style='FONT-SIZE: medium; FONT-FAMILY: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(26,26,26); FONT-STYLE: normal; MARGIN: -0.8em 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'><BR></P><FIGURE 
style='FONT-SIZE: medium; FONT-FAMILY: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(26,26,26); FONT-STYLE: normal; MARGIN: 1.4em 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px' 
data-size="normal"><IMG class="content_image lazy" 
style="MAX-WIDTH: 100%; MARGIN: 0px auto; DISPLAY: block" 
src="https://pic2.zhimg.com/80/v2-229daa2bfc2444f20a57a2deabf6522d_hd.jpg" 
width=88  data-size="normal" 
data-actualsrc="https://pic2.zhimg.com/v2-229daa2bfc2444f20a57a2deabf6522d_b.jpg" 
data-rawheight="31" data-rawwidth="88" data-caption=""></FIGURE>
<P class=ztext-empty-paragraph 
style='FONT-SIZE: medium; FONT-FAMILY: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(26,26,26); FONT-STYLE: normal; MARGIN: -0.8em 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'><BR></P>
<P 
style='FONT-SIZE: medium; FONT-FAMILY: -apple-system, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(26,26,26); FONT-STYLE: normal; MARGIN: 1.4em 0px; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'>本作品采用<A 
class=" wrap external" 
style="CURSOR: pointer; TEXT-DECORATION: none; BORDER-BOTTOM: grey 1px solid; COLOR: " 
href="https://link.zhihu.com/?target=http%3A//creativecommons.org/licenses/by/4.0/" 
rel="nofollow noreferrer" target=_blank  data-za-detail-view-id="1043">知识共享署名 4.0 
国际许可协议</A>进行许可。</P></body>
</html>
